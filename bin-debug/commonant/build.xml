<?xml version="1.0" encoding="UTF-8"?>
<!-- build.xml -->
<!--Author : Greg Cockroft - greg@kixeye.com-->
<!--
   Build all swfs for the games in one build file.

   Usage: ant client  [wctrunk,wcbattle,bymtrunk,bptrunk]

   The differences in the games are handled by a target include for compiling the game and
   the loader. i.e. wctrunk.mxmlc.inc

   All the obfuscation is shared.

   The artifacts go into a booty directory.

		booty/secure.gameloader.swf   		- gameloader with protection and bitdamage
		booty/debug.swf				  		- raw debug build that can be loaded from the above
		booty/monocletest.swf				- non-obfuscated release swf for monocle testing
		booty/wrapped-secure.debug.swf 		- wrapped obfuscated version of the above
		booty/wrapped-secure.release.swf 	- same as above but release build
		booty/encrypted_wrapper/bin-work	- log files and temp files


	As a general rule wrapped-secure.debug.swf should be used for testing.
	As a general rule wrapped-secure.release.swf should be used for release.
	Backup to debug.swf is something is horribly wrong.

-->

<project name="Generic Client Build" default="help" xmlns:ac="antlib:net.sf.antcontrib">
	
	<property name="root.build.dir" location="booty" />
    <property name="root.dir" location="."/>

	<!-- Where we toggle a byte in a swf so that it won't decompress -->
	<!-- Off for now. Setting to 0 will disable -->
	<property name="bitdamagelocation.config" value="1024" />

    <import file="wcbattle.mxmlc.inc"/>
    <import file="wctrunk.mxmlc.inc"/>
    <import file="bymtrunk.mxmlc.inc"/>
    <import file="bptrunk.mxmlc.inc"/>
	
	<target name="help">
		<echo>Must give [wctrunk,wcbattle,bymtrunk,bptrunk]</echo>
	</target>

	<!-- ********************************************************************************** -->
	<!--							The Clients we can build 								-->
	<!--  Used to pick mxmlc fragments														-->
	<!-- ********************************************************************************** -->
	<target name="wctrunk">
		<property name="wctrunk" value="true"/>
		<property name="noimagecopy" value="true"/>
		<antcall target="fullbuild"/>
	</target>

	<target name="wcbattle">
		<property name="wcbattle" value="true"/>
		<property name="noimagecopy" value="true"/>
		<antcall target="fullbuild"/>
	</target>

	<target name="bymtrunk">
		<property name="bymtrunk" value="true"/>
		<property name="imagecopy" value="true"/>
		<antcall target="fullbuild"/>
	</target>

	<target name="bptrunk">
		<property name="bptrunk" value="true"/>
		<antcall target="fullbuild"/>
	</target>

	<target name="-compile-swf" depends="-compile-wcbattle,-compile-wctrunk,-compile-bymtrunk,-compile-bptrunk" />

	<target name="-compile-gameloader" depends="-compile-gameloader-wctrunk,-compile-gameloader-wcbattle,-compile-gameloader-bymtrunk,-compile-gameloader-bptrunk" />

	<!-- OS Specific code -->
	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<condition property="isMac">
		<os family="mac" />
	</condition>

	<target name="if_windows" if="isWindows">
		<property name="tools.dir" value="C:\" />
		<property name="secure.dir" value="${tools.dir}/secureSWF" />
		<property name="FLEX_HOME" value="C:\Program Files (x86)\Adobe\Adobe Flash Builder 4.5\sdks\4.5.1" />
	</target>

	<target name="if_unix" if="isUnix">
		<property name="tools.dir" value="/usr/local" />
		<property name="secure.dir" value="${tools.dir}/secureSWF" />
		<property name="FLEX_HOME" value="/opt/sdks/flex_sdk_4.5.1" />
	</target>

	<target name="if_mac" if="isMac">
		<property name="tools.dir" value="/usr/local" />
		<property name="secure.dir" value="${tools.dir}/secureSWF" />
		<property name="FLEX_HOME" value="/Applications/Adobe Flash Builder 4.5/sdks/4.5.1" />
	</target>
	
	<target name="-init-env" depends="if_windows,if_unix,if_mac">
		
	</target>

	<!-- Delete all output files -->
	<target name="clean">
		<delete dir="${root.build.dir}" failOnError="false" includeEmptyDirs="true" />
	</target>
	
	<target name="-init">
		<mkdir dir="${root.build.dir}"/>
	</target>
	
	<!-- ********************************************************************************** -->
	<!--							Compilation Targets										-->
	<!-- ********************************************************************************** -->

	<target name="debug" depends="-init-env">
		<mkdir dir="${build.dir}" />

		<echo>Building debug...</echo>
		<antcall target="-compile-swf">
			<param name="compile.swf.file" value="debug.swf"/>
			<param name="debug.config" value="true"/>
			<param name="release.config" value="false"/>
		</antcall>
	</target>
	
	<target name="release" depends="-init-env">
		<mkdir dir="${build.dir}" />

		<echo>Building release...</echo>
		<antcall target="-compile-swf">
			<param name="compile.swf.file" value="release.swf"/>
			<param name="debug.config" value="false"/>
			<param name="release.config" value="true"/>
		</antcall>
	</target>

	<target name="gameloader" depends="-init-env">
		<mkdir dir="${build.dir}" />

		<echo>Building gameloader...</echo>
		<antcall target="-compile-gameloader">
			<param name="compile.swf.file" value="gameloader.swf"/>
			<param name="debug.config" value="false"/>
			<param name="release.config" value="true"/>
		</antcall>
	</target>
	
    <!-- ********************************************************************************** -->
    <!--                    Obfuscation Targets                                             -->
    <!-- ********************************************************************************** -->

    <target name="wrap-secure-release" depends="release">
        <property name="removedebug" value="true"/>
        <property name="filetowrap" value="${build.dir}/release.swf"/>
        <property name="outputfile" value="${build.dir}/wrapped-secure.release.swf"/>
		<antcall target="copykindikey"/>
        <ant target="obfuscatewrap" dir="${build.dir}/encrypted_wrapper" antFile="build.xml" inheritAll="true"/>

        <property name="filetodamage" value="${outputfile}"/>
		<antcall target="bitdamage"/>
    </target>

    <target name="wrap-secure-debug" depends="debug">
        <property name="removedebug" value="false"/>
        <property name="filetowrap" value="${build.dir}/debug.swf"/>
        <property name="outputfile" value="${build.dir}/wrapped-secure.debug.swf"/>
		<antcall target="copykindikey"/>
        <ant target="obfuscatewrap" dir="${build.dir}/encrypted_wrapper" antFile="build.xml" inheritAll="true"/>

        <property name="filetodamage" value="${outputfile}"/>
		<antcall target="bitdamage"/>
    </target>

	<!-- We toggle a byte in a swf so that it won't decompress -->
    <target name="bitdamage">
        <exec executable="/bin/bash" dir="${root.dir}">
            <arg value="-c"/>
            <arg line='"perl src/bitdamage.pl ${filetodamage} ${bitdamagelocation.config}"'/>
        </exec>
    </target>

	<!-- 
		The key.data file needs to be create from registration email and code received from kindi.
		
		We no longer provide the registration information in the xml build files.

		They have a max activation count that we do not want to trigger. Plus if
		if their servers are down for activation we don't want to stop our builds.
	-->
    <target name="copykindikey">
		<copy file="/usr/local/secureSWF/key.data" tofile="${build.dir}/encrypted_wrapper/secureswf/key.data" />
    </target>

    <target name="secure-gameloader" depends="gameloader">
        <property name="removedebug" value="true"/>
        <property name="filetowrap" value="${build.dir}/gameloader.swf"/>
        <property name="outputfile" value="${build.dir}/secure.gameloader.swf"/>
		<property name="game.mapping.table" value="${build.dir}/game.mapping.table.json"/>
		<property name="secure.obfuscate.high.mapping.table" value="${build.dir}/secure.obfuscate.high.mapping.table.json"/>
		<antcall target="copykindikey"/>
        <ant target="obfuscatehigh" dir="${build.dir}/encrypted_wrapper" antFile="build.xml" inheritAll="true"/>
        <delete file="${build.dir}/gameloader.swf"/>
    </target>

	<!-- ********************************************************************************** -->
	<!--							Packaging Targets										-->
	<!-- ********************************************************************************** -->
	<target name="fullbuild">

        <!-- we copy this entire directory for each build.
            It contains a src directoy that gets compiled to embed the swf.
            The src swf gets copied to the src dir during the build process  -->

		<antcall target="fullbuild-obfuscation"/>
		<antcall target="fullbuild-noobfuscation"/>

	</target>
	
	<target name="fullbuild-obfuscation" if="obfuscation">
		<echo message="  fullbuild-obfuscation"/>
		<antcall target="-init-build-dir">
			<param name="build.dir" location="${root.build.dir}/debug"/>
		</antcall>
		<antcall target="-init-build-dir">
			<param name="build.dir" location="${root.build.dir}/release"/>
		</antcall>
		<antcall target="-show-time"/>
		
		<parallel>
			<antcall target="wrap-secure-debug">
				<param name="build.dir" location="${root.build.dir}/debug"/>
			</antcall>
			<antcall target="secure-gameloader">
				<param name="build.dir" location="${root.build.dir}/release"/>
			</antcall>
			<antcall target="wrap-secure-release">
				<param name="build.dir" location="${root.build.dir}/release"/>
			</antcall>
		</parallel>

		<antcall target="-show-time"/>
		<!-- Keep non-obfuscated release swf for monocle testing -->
		<move file="${root.build.dir}/release/release.swf" tofile="${root.build.dir}/monocletest.swf" />

		<!-- leave for testing a damaged version of debug.swf that can be loaded by the gameloader -->
		<property name="filetodamage" value="${build.dir}/debug/debug.swf"/>
		<antcall target="bitdamage"/>
		
		<copy file="${root.build.dir}/release/secure.gameloader.swf" tofile="${root.build.dir}/secure.gameloader.swf" />
		<copy file="${root.build.dir}/release/wrapped-secure.release.swf" tofile="${root.build.dir}/wrapped-secure.release.swf" />
		<copy file="${root.build.dir}/debug/wrapped-secure.debug.swf" tofile="${root.build.dir}/wrapped-secure.debug.swf" />

	</target>

	<target name="fullbuild-noobfuscation" unless="obfuscation">
        <echo message="  fullbuild-noobfuscation"/>
		<antcall target="-init-build-dir">
			<param name="build.dir" location="${root.build.dir}/debug"/>
		</antcall>

		<antcall target="debug">
			<param name="build.dir" location="${root.build.dir}/debug"/>
		</antcall>
		<antcall target="secure-gameloader">
			<param name="build.dir" location="${root.build.dir}/debug"/>
		</antcall>

		<!-- leave for testing a damaged version of debug.swf that can be loaded by the gameloader -->
        <property name="filetodamage" value="${root.build.dir}/debug/debug.swf"/>
		<antcall target="bitdamage"/>

		<copy file="${root.build.dir}/debug/secure.gameloader.swf" tofile="${root.build.dir}/secure.gameloader.swf" />
		<!-- If not obfuscating duplicate debug.swf -->
        <copy file="${root.build.dir}/debug/debug.swf" tofile="${root.build.dir}/wrapped-secure.debug.swf" />
        <copy file="${root.build.dir}/debug/debug.swf" tofile="${root.build.dir}/wrapped-secure.release.swf" />

	</target>
	
	<target name="-init-build-dir">
		<delete dir="${build.dir}/encrypted_wrapper" failOnError="false" includeEmptyDirs="true" />
		<copy todir="${build.dir}/encrypted_wrapper" >
			<fileset dir="src/encrypted_wrapper" includes="**"/>
		</copy>
	</target>
	
	<target name="-show-time">
		<exec executable="/bin/bash" dir=".">
			<arg value="-c"/>
			<arg line='"date"'/>
		</exec>
	</target>
	
</project>
