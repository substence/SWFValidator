--- src/com/kixeye/wc/resources/CDNManifestDataManager.as
+++ src/com/kixeye/wc/resources/CDNManifestDataManager.as
@@ -68,10 +68,19 @@
                 {           _configLoadQueue.push( formatCDNAssetNameIntoCacheingStrategyNamespace( key, _manifestData[ key ] ) );                 }+				_configLoadQueue = _configLoadQueue.sort(sortByPriority);                 loadCDNAssets();             }         }+		private static function sortByPriority(x:String, y:String):Number+		{+			x = x.substr( 0, x.indexOf( CACHE_DELIMITER ));+			y = y.substr( 0, y.indexOf( CACHE_DELIMITER ));++			return OrderedRequestLoaderAndNativeDataOrganizer.getPriorityFromKey(x) - OrderedRequestLoaderAndNativeDataOrganizer.getPriorityFromKey(y);+		}+     private static function filterData(data:Object):Object     {       // This function selects only the keys that we need depending on progress in the tutorial@@ -210,6 +219,8 @@
             // Store loaded asset in Dict             var dataName:String = _currentLoadingAsset.substr( 0, _currentLoadingAsset.indexOf( CACHE_DELIMITER ));             _dataStore[ dataName ] = jsonData;++			Logger.debug("CDNManifest loaded " + dataName);             // Notify registered classes that new data has been loaded for your key       var dispatchedData:Object = { "name":dataName, "data":jsonData };@@ -228,7 +239,6 @@
             // Continue Loading Queued Assets if more are in the queue, if not free-up memeory             _configLoadQueue.length > 0 ? loadCDNAssets() : cleanUp();-         }         private static function handleAssetLoadError( msg:String ):void@@ -308,7 +318,6 @@
                 return key + value;             }         }-         /**         * Turn caching strategy names like: filename.checksumhere.data into: filename.data removing everything